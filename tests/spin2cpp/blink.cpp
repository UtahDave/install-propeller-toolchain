//
// automatically generated by spin2cpp v1.91 on Mon Sep  1 23:00:21 2014
// spin2cpp --elf -o blink.elf -O -mfcache blink.spin 
//

// Blink LED on port 16
#include <propeller.h>
#include "blink.h"

#ifdef __GNUC__
#define INLINE__ static inline
#define PostEffect__(X, Y) __extension__({ int32_t tmp__ = (X); (X) = (Y); tmp__; })
#else
#define INLINE__ static
static int32_t tmp__;
#define PostEffect__(X, Y) (tmp__ = (X), (X) = (Y), tmp__)
#endif

int32_t blink::LedOnOff(void)
{
  // Method declaration 
  // Set P16 to output
  DIRA |= (1<<16);
  while (1) {
    // Endless loop prevents
    // program from ending.
    // Set P16 high 
    OUTA |= (1<<16);
    // Wait a moment
    waitcnt(((CLKFREQ / 4) + CNT));
    // Set P16 low
    OUTA &= ~(1<<16);
    // Wait a moment
    waitcnt(((CLKFREQ / 4) + CNT));
  }
  return 0;
}


blink MainObj__;

int main() {
  return MainObj__.LedOnOff();
}
